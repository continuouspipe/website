variables:
    - name: COMMIT_SHA
      expression: code_reference.sha
    - name: DEBUG_MODE
      condition: code_reference.branch == "master"
      value: false
    - name: DEBUG_MODE
      condition: code_reference.branch != "master"
      value: true

defaults:
    cluster: ${CLUSTER}
    environment:
        name: '"website-" ~ code_reference.branch'

tasks:
    images:
        build:
            services:
                app:
                    image: quay.io/inviqa_images/continuouspipe
                    tag: website-${COMMIT_SHA}

    deploy:
        deploy:
            services:
                app:
                    specification:
                        environment_variables:
                            - name: DEBUG_MODE
                              value: ${DEBUG_MODE}
                            - name: CONTENTFUL_ACCESS_TOKEN
                              value: ${CONTENTFUL_ACCESS_TOKEN}
                            - name: CONTENTFUL_SPACE_ID
                              value: ${CONTENTFUL_SPACE_ID}
                            - name: CONTENTFUL_POST_CONTENT_TYPE
                              value: ${CONTENTFUL_POST_CONTENT_TYPE}
                            - name: CONTENTFUL_TAG_CONTENT_TYPE
                              value: ${CONTENTFUL_TAG_CONTENT_TYPE}

                    endpoints:
                        - name: dev
                          ingress:
                              class: nginx
                              host_suffix: 'website-dev.continuouspipe.io'
                          cloud_flare_zone: { zone_identifier: '${CLOUD_FLARE_ZONE}', proxied: true, authentication: { email: '${CLOUD_FLARE_EMAIL}', api_key: '${CLOUD_FLARE_API_KEY}' } }
                          ssl_certificates: [{ name: auto, cert: automatic, key: automatic }]
                        - name: stable
                          ingress:
                              class: nginx
                              host: continuouspipe.io
                          condition: 'code_reference.branch == "master"'
                          ssl_certificates: [{ name: auto, cert: automatic, key: automatic }]

                    deployment_strategy:
                        readiness_probe:
                            type: http
                            port: 80
                            path: /
