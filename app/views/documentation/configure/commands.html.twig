{% extends "documentation/configure/layout.html.twig" %}
{% block left_navigation_commands_class %} class="active"{% endblock %}

{% block content %}
    <h2>Commands</h2>

    <p>The <code>run</code> task allows to run commands in containers, in the deployed environment context if any. That way,
    you can run your <strong>integration tests</strong> or your <strong>application migrations</strong> for example.</p>

    <p>Most of the options are shared with the <a href="{{ path('documentation_configure', {'page': 'deployments'}) }}"><code>deploy</code> task</a>:</p>
    <ul>
        <li><a href="{{ path('documentation_configure', {'page': 'deployments'}) }}#cluster"><code>cluster</code>, to select the cluster on which the container will run</a></li>
        <li><a href="{{ path('documentation_configure', {'page': 'deployments'}) }}#image"><code>image</code>, to select the image that will be used to run the commands</a></li>
        <li><a href="{{ path('documentation_configure', {'page': 'deployments'}) }}#environment-name"><code>environment</code>, to select the name of the environment on which the container will be created</a></li>
        <li><a href="{{ path('documentation_configure', {'page': 'deployments'}) }}#environment-variables"><code>environment_variables</code>, to inject some environment variables in the container</a></li>
    </ul>

    <p>Once you've configured these options according to your needs, you only have to define the <code>commands</code> options as in the following example.</p>

{% codeblock lang:yaml %}
tasks:
    # ...

    migrations:
        run:
            cluster: my-cluster

            image:
                from_service: web

            commands:
                - composer run-script update-parameters
                - app/console doctrine:migrations:migrate --no-interaction

            environment_variables:
                - name: DATABASE_PASSWORD
                  value: ${THE_PRIVATE_DATABASE_PASSWORD_VARIABLE}
{% endcodeblock %}

    <p>That example will run the some migration commands in a container created from the image of the web service. It will run on the cluster named <code>my-cluster</code> and
    will have the environment variable named <code>DATABASE_PASSWORD</code> injected with the value of a <code>THE_PRIVATE_DATABASE_PASSWORD_VARIABLE</code>
    <a href="{{ path('documentation_configure', {'page': 'configuration-files'}) }}#variables">variable previously defined</a>.</p>

{% endblock %}
